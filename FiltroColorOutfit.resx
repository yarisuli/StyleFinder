<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonAmarillo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfnChENBROUkY8JAAAC
        3klEQVRIS6XWTYiNURzH8RNXEyYWRlMUxgJ52SCUBQulFKWQpiyElIWspCzcFCulhBGGBQtEZEFSSDJm
        5j6XMYWNMt4KDRkveX98f+c8z+25x3muK6c+nXvPy/+c53n+57nXZEvchV5E6EbZjOHzGpxAD/oxgNco
        4QhWYTRMXMJ9dCQB/RLfRV9SR2YEC2yg7sAnxDV8wDW0ssgw5pn4iovzR7G70G7KZjL1aXxFKGiejziE
        8TbW7SRwWuyt0QKRmY6bCAWp11U2OolaG04W0Kq6xLJpoUOXHZr4ry4S1z0npFfQgDaEJqReoRu3UMY7
        hMbJTxTZ+GDqyiKLkTdJwfdiLrtrijtNI7e3mc8LaNsPZVxo3kvMAQsoIyJzKunwPcZSgg6ids+O9LS1
        u80FaqXws2S8bx9jC7qKmQgN6ifAShvMXW1Vsc9R7e5crUUo1R9gogZswbekMeswuy7YXXsLpCXtw3Bc
        gB9Dab1aA9ozjanPWAJ7W2oVO8bR1XxHNs4v7Fbn5Uxjqg821+spGodZCCXPcXVe9xpF93Ic6ioah6lQ
        JvqxTqrzktcoSoQp+GtJ3nUyD+/hxzqqzoNeo3zBCtgAtUrcA5eBm/AD2Tg6lDvVuREKmu0UnZ2hCL9R
        KZU0jswo3IAfY4ANLNMuZvDlidcpSr918Z0kkJdldgG5R5pHZjtCx0Cvn7HK9SF8OJDpyHqO9dA5cEHd
        SU/pd2crfaFnIbviWDvSpJJ9x+hdExqok3wGywk4jbEt1Lr6VugAhm616JWknw4W0Kntsm/LIvSgQhNE
        wZ7iIZR9oduTUt/m+JGNnSzisqMJZ5NB/0OnvI24jTauFlGhMTUB5xGaXA+l8DEWULbZ51ZVbKPTjD14
        i1CgPDrtRXY/krrGH4k0e1zGLYL+ULxB3rPSC/EF2pk3n3n6fXFvgby/RSqVZyQudRdiB86hE73QXyVl
        3DbGzWZOQ2UO86uLMb8BmcETlqlNIegAAAAASUVORK5CYII=
</value>
  </data>
  <data name="buttonFiltrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>